Q.1 Table: Student
+---------------------+---------+
| Column Name | Type |
+---------------------+----------+
| name | varchar |
| subject | varchar |
| marks | int |
+---------------------+-----------+

Get the total of top three subject marks for each student

Select name,  sum(mark) as total_marks
From ( 
Select name, subjects, mark, rank() over(partition by name order by marks desc) as sub_rank  
From student
) tt 
Where sub_rank <=3 
Group by name

Q.2 
Table: Rent
+---------------------+---------+
| Column Name | Type |
+---------------------+----------+
| student_id | int |
| name | varchar |
| date | date |
| rent_paid | int |
+---------------------+-----------+

List the months where each user skipped the rent. (Assuming there’s a calendar table)

-- Step 1: Expected combinations
WITH expected AS (
  SELECT DISTINCT s.student_id, s.name, DATE_TRUNC('month', c.date) AS month
  FROM (SELECT DISTINCT student_id, name FROM Rent) s
  CROSS JOIN (SELECT DISTINCT DATE_TRUNC('month', date) AS date FROM Calendar) c
),
paid AS (
  SELECT DISTINCT student_id, DATE_TRUNC('month', date) AS month
  FROM Rent
)
SELECT 
  e.student_id, e.name, TO_CHAR(e.month, 'YYYY-MM') AS missing_month
FROM expected e
LEFT JOIN paid p 
  ON e.student_id = p.student_id AND e.month = p.month
WHERE p.month IS NULL;

--------------

Select distinct r.student_id, name, date_trunc(‘month’  c.month  ) as month 
From calendar c
Left join Rent r on date_trunc(‘month’, ’r.date) = date_trunc(‘month’  c.month  )
Where date_trunc(‘month’, ’r.date)  is null 

Q.3) Tell me about how each Joins work? 
INNER JOIN 
LEFT JOIN 
FULL OUTER JOIN

Q.4) Tell me about some of your projects that you did? 

Q.5) What are day to day tasks at Porter? 




